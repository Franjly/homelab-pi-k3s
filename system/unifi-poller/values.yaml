unifi-poller:
  image:
    repository: golift/unifi-poller
    pullPolicy: IfNotPresent
    tag: 2.1.3


  # -- Environment variable configuration options for unifi-poller ([docs](https://unifipoller.com/docs/install/configuration)).
  #    Note: a [configuration file](https://github.com/unifi-poller/unifi-poller/blob/master/examples/up.conf.example) is also supported.
  env:
    UP_UNIFI_DEFAULT_URL: "https://192.168.0.1"
    UP_UNIFI_DEFAULT_USER: <path:pi-k3s/data/system/monitoring-system/unifi-poller#UP_UNIFI_DEFAULT_USER>
    UP_UNIFI_DEFAULT_PASS: <path:pi-k3s/data/system/monitoring-system/unifi-poller#UP_UNIFI_DEFAULT_PASS>
    UP_WEBSERVER_ENABLE: true
    # UP_PROMETHEUS_DISABLE: true
    # UP_INFLUXDB_DISABLE: true

  service:
    main:
      ports:
        http:
          enabled: true
          protocol: TCP
          port: 37288
        metrics:
          enabled: true
          protocol: TCP
          port: 9130

  ingress:
    main:
      enabled: true

      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-staging
        # kubernetes.io/tls-acme: "true"

      ingressClassName: "nginx"

      hosts:
        - host: unifi-poller.local.tecno-fly.com
          paths:
            - path: /
              pathType: Prefix
              service:
                name: unifi-poller
                port: 37288
      tls:
        - secretName: unifi-poller-tls
          hosts:
            - unifi-poller.local.tecno-fly.com

  influxdb:
    # -- Create an InfluxDB instance as a [unifi-poller storage backend](https://unifipoller.com/docs/dependencies/influxdb).
    #    See [bitnami/influxdb](https://github.com/bitnami/charts/tree/master/bitnami/influxdb) for more options.
    enabled: false
    # -- InfluxDB cluster deployment architecture.
    architecture: standalone
    # -- Database name to automatically initialize.
    #    Be sure to match in unifi-poller's [influxdb config](https://unifipoller.com/docs/install/configuration#influxdb).
    database: unifi
    # -- Enable InfluxDB authentication, supported by unifi-poller.
    #    Be sure to match in unifi-poller's [influxdb config](https://unifipoller.com/docs/install/configuration#influxdb).
    authEnabled: false
    persistence:
      # -- Enable persistence to store in a PV so data survives pod restarts.
      enabled: false
      # storageClass: ""
      # size: 8Gi

  metrics:
    # -- Enable and configure a Prometheus serviceMonitor for the chart under this key.
    # @default -- See values.yaml
    enabled: true
    serviceMonitor:
      interval: 1m
      scrapeTimeout: 30s
      labels: {}
    # -- Enable and configure Prometheus Rules for the chart under this key.
    # @default -- See values.yaml
    prometheusRule:
      enabled: false
      labels: {}
      # -- Configure additionial rules for the chart under this key.
      # @default -- See prometheusrules.yaml
      rules: []
        # - alert: UnifiPollerAbsent
        #   annotations:
        #     description: Unifi Poller has disappeared from Prometheus service discovery.
        #     summary: Unifi Poller is down.
        #   expr: |
        #     absent(up{job=~".*unifi-poller.*"} == 1)
        #   for: 5m
        #   labels:
        #     severity: critical