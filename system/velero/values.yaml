velero:
  initContainers:
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.5.1
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
    - name: velero-plugin-for-longhorn
      image: franjlytools/velero-plugin-for-longhorn
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  metrics:
    enabled: true
    scrapeInterval: 30s
    scrapeTimeout: 10s

    serviceMonitor:
      enabled: true

    prometheusRule:
      enabled: true
      # Additional labels to add to deployed PrometheusRule
      additionalLabels: {}
      # PrometheusRule namespace. Defaults to Velero namespace.
      # namespace: ""
      # Rules to be deployed
      spec:
      - alert: VeleroBackupPartialFailures
        annotations:
          message: Velero backup {{ $labels.schedule }} has {{ $value | humanizePercentage }} partialy failed backups.
        expr: |-
          velero_backup_partial_failure_total{schedule!=""} / velero_backup_attempt_total{schedule!=""} > 0.25
        for: 15m
        labels:
          severity: warning
      - alert: VeleroBackupFailures
        annotations:
          message: Velero backup {{ $labels.schedule }} has {{ $value | humanizePercentage }} failed backups.
        expr: |-
          velero_backup_failure_total{schedule!=""} / velero_backup_attempt_total{schedule!=""} > 0.25
        for: 15m
        labels:
          severity: warning

  kubectl:
    image:
      repository: docker.io/zcube/bitnami-compat-kubectl

  configuration:
    provider: aws

    backupStorageLocation:
      provider: aws
      # bucket is the name of the bucket to store backups in. Required.
      bucket: <path:pi-k3s/data/system/velero#bucket>
      # caCert defines a base64 encoded CA bundle to use when verifying TLS connections to the provider. Optional.
      caCert: <path:pi-k3s/data/system/minio#ca-cert | base64encode>
      config: 
        region: minio
        s3ForcePathStyle: "true"
        s3Url: https://<path:pi-k3s/data/system/minio#host>:<path:pi-k3s/data/system/minio#port>
        insecureSkipTLSVerify: true

    volumeSnapshotLocation:
      name: longhorn
      provider: longhorn.io/longhorn
      # Additional provider-specific configuration. See link above
      # for details of required/optional fields for your provider.
      config:
        snapshotLocation: longhorn
    #    region:
    #    apiTimeout:
    #    resourceGroup:
    #    The ID of the subscription where volume snapshots should be stored, if different from the clusterâ€™s subscription. If specified, also requires `configuration.volumeSnapshotLocation.config.resourceGroup`to be set. (Azure only)
    #    subscriptionId:
    #    incremental:
    #    snapshotLocation:
    #    project:

  credentials:
    useSecret: true
    name: velero-minio-credentials
    secretContents: 
      cloud: |
        [default]
        aws_access_key_id=<path:pi-k3s/data/system/velero#access-key>
        aws_secret_access_key=<path:pi-k3s/data/system/velero#secret-key>

  schedules:
    pi-k3s-complete-backup:
      disabled: false
      schedule: "45 7 * * *"
      useOwnerReferencesInBackup: false
      template:
        ttl: "240h"
        includedNamespaces:
        - "*"
