velero:
  # Init containers to add to the Velero deployment's pod spec. At least one plugin provider image is required.
  # If the value is a string then it is evaluated as a template.
  initContainers:
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.10.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
    - name: velero-plugin-for-csi
      image: velero/velero-plugin-for-csi:v0.7.1
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  # Node selector to use for the Velero deployment. Optional.
  nodeSelector: {}

  # Settings for Velero's prometheus metrics. Enabled by default.
  metrics:
    enabled: true
    scrapeInterval: 30s
    scrapeTimeout: 10s

    # Pod annotations for Prometheus
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8085"
      prometheus.io/path: "/metrics"

    serviceMonitor:
      autodetect: true
      enabled: true

    prometheusRule:
      autodetect: true
      enabled: true

      # Rules to be deployed
      spec:
      - alert: VeleroBackupPartialFailures
        annotations:
          message: Velero backup {{ $labels.schedule }} has {{ $value | humanizePercentage }} partialy failed backups.
        expr: |-
          velero_backup_partial_failure_total{schedule!=""} / velero_backup_attempt_total{schedule!=""} > 0.25
        for: 15m
        labels:
          severity: warning
      - alert: VeleroBackupFailures
        annotations:
          message: Velero backup {{ $labels.schedule }} has {{ $value | humanizePercentage }} failed backups.
        expr: |-
          velero_backup_failure_total{schedule!=""} / velero_backup_attempt_total{schedule!=""} > 0.25
        for: 15m
        labels:
          severity: warning

  kubectl:
    image:
      repository: docker.io/bitnami/kubectl

  # This job upgrades the CRDs.
  upgradeCRDs: true

  # This job is meant primarily for cleaning up CRDs on CI systems.
  # Using this on production systems, especially those that have multiple releases of Velero, will be destructive.
  cleanUpCRDs: false

  ##
  ## Parameters for the `default` BackupStorageLocation and VolumeSnapshotLocation,
  ## and additional server settings.
  ##
  configuration:
    # Parameters for the BackupStorageLocation(s). Configure multiple by adding other element(s) to the backupStorageLocation slice.
    # See https://velero.io/docs/v1.6/api-types/backupstoragelocation/
    backupStorageLocation:
      # name is the name of the backup storage location where backups should be stored. If a name is not provided,
      # a backup storage location will be created with the name "default". Optional.
    - name: minio
      # provider is the name for the backup storage location provider.
      provider: aws
      # bucket is the name of the bucket to store backups in. Required.
      bucket: <path:pi-k3s/data/system/velero#bucket>
      # caCert defines a base64 encoded CA bundle to use when verifying TLS connections to the provider. Optional.
      caCert: <path:pi-k3s/data/system/minio#ca-cert | base64encode>
      
      credential:
        # name of the secret used by this backupStorageLocation.
        name: velero-minio-credentials
        # name of key that contains the secret data to be used.
        key: cloud
      # Additional provider-specific configuration. See link above
      # for details of required/optional fields for your provider.
      config:
        region: minio
        s3ForcePathStyle: true
        s3Url: https://<path:pi-k3s/data/system/minio#host>:<path:pi-k3s/data/system/minio#port>
        #  Option to skip certificate validation or not if insecureSkipTLSVerify is set to be true, the client side should set the
        #  flag. For Velero client Command like velero backup describe, velero backup logs needs to add the flag --insecure-skip-tls-verify
        insecureSkipTLSVerify: true

    # Parameters for the VolumeSnapshotLocation(s). Configure multiple by adding other element(s) to the volumeSnapshotLocation slice.
    # See https://velero.io/docs/v1.6/api-types/volumesnapshotlocation/
    volumeSnapshotLocation:
      # name is the name of the volume snapshot location where snapshots are being taken. Required.
    - name: minio-snapshot
      # provider is the name for the volume snapshot provider.
      provider: aws
      # bucket is the name of the bucket to store backups in. Required.
      bucket: <path:pi-k3s/data/system/velero#bucket-snapshot>
      # caCert defines a base64 encoded CA bundle to use when verifying TLS connections to the provider. Optional.
      caCert: <path:pi-k3s/data/system/minio#ca-cert | base64encode>

      credential:
        # name of the secret used by this volumeSnapshotLocation.
        name: velero-minio-credentials
        # name of key that contains the secret data to be used.
        key: cloud
      # Additional provider-specific configuration. See link above
      # for details of required/optional fields for your provider.
      config:
        region: minio

    # These are server-level settings passed as CLI flags to the `velero server` command. Velero
    # uses default values if they're not passed in, so they only need to be explicitly specified
    # here if using a non-default value. The `velero server` default values are shown in the
    # comments below.
    # --------------------
    # `velero server` default: kopia
    uploaderType:
    # `velero server` default: 1m
    backupSyncPeriod:
    # `velero server` default: 4h
    fsBackupTimeout:
    # `velero server` default: 30
    clientBurst:
    # `velero server` default: 500
    clientPageSize:
    # `velero server` default: 20.0
    clientQPS:
    # Name of the default backup storage location. Default: default
    defaultBackupStorageLocation: minio
    # The default duration any single item operation can take before timing out, especially important for large volume schedules. Default 4h
    defaultItemOperationTimeout:
    # How long to wait by default before backups can be garbage collected. Default: 72h
    defaultBackupTTL:
    # Name of the default volume snapshot location.
    defaultVolumeSnapshotLocations:
    # `velero server` default: empty
    disableControllers:
    # `velero server` default: false
    disableInformerCache: false
    # `velero server` default: 1h
    garbageCollectionFrequency:
    # Set log-format for Velero pod. Default: text. Other option: json.
    logFormat:
    # Set log-level for Velero pod. Default: info. Other options: debug, warning, error, fatal, panic.
    logLevel:
    # `velero server` default: customresourcedefinitions,namespaces,storageclasses,volumesnapshotclass.snapshot.storage.k8s.io,volumesnapshotcontents.snapshot.storage.k8s.io,volumesnapshots.snapshot.storage.k8s.io,persistentvolumes,persistentvolumeclaims,secrets,configmaps,serviceaccounts,limitranges,pods,replicasets.apps,clusterclasses.cluster.x-k8s.io,clusters.cluster.x-k8s.io,clusterresourcesets.addons.cluster.x-k8s.io
    restoreResourcePriorities:
    # `velero server` default: 1m
    storeValidationFrequency:
    # How long to wait on persistent volumes and namespaces to terminate during a restore before timing out. Default: 10m
    terminatingResourceTimeout:
    # Bool flag to configure Velero server to move data by default for all snapshots supporting data movement. Default: false
    defaultSnapshotMoveData:
    # Comma separated list of velero feature flags. default: empty
    # features: EnableCSI
    features: EnableCSI

  # Information about the Kubernetes service account Velero uses.
  serviceAccount:
    server:
      create: true

  # Info about the secret to be used by the Velero deployment, which
  # should contain credentials for the cloud provider IAM account you've
  # set up for Velero.
  credentials:
    # Whether a secret should be used. Set to false if, for examples:
    # - using kube2iam or kiam to provide AWS IAM credentials instead of providing the key file. (AWS only)
    # - using workload identity instead of providing the key file. (Azure/GCP only)
    useSecret: true
    # Name of the secret to create if `useSecret` is true and `existingSecret` is empty
    name: velero-minio-credentials
    # Data to be stored in the Velero secret, if `useSecret` is true and `existingSecret` is empty.
    # As of the current Velero release, Velero only uses one secret key/value at a time.
    # The key must be named `cloud`, and the value corresponds to the entire content of your IAM credentials file.
    # Note that the format will be different for different providers, please check their documentation.
    # Here is a list of documentation for plugins maintained by the Velero team:
    # [AWS] https://github.com/vmware-tanzu/velero-plugin-for-aws/blob/main/README.md
    # [GCP] https://github.com/vmware-tanzu/velero-plugin-for-gcp/blob/main/README.md
    # [Azure] https://github.com/vmware-tanzu/velero-plugin-for-microsoft-azure/blob/main/README.md
    secretContents:
      cloud: |
        [default]
        aws_access_key_id=<path:pi-k3s/data/system/velero#access-key>
        aws_secret_access_key=<path:pi-k3s/data/system/velero#secret-key>

  # Whether to create backupstoragelocation crd, if false => do not create a default backup location
  backupsEnabled: true
  # Whether to create volumesnapshotlocation crd, if false => disable snapshot feature
  snapshotsEnabled: true

  # Backup schedules to create.
  schedules:
    pi-k3s-complete-backup:
      disabled: false
      schedule: "45 7 * * *"
      useOwnerReferencesInBackup: false
      annotations:
        argocd.argoproj.io/compare-options: IgnoreExtraneous
        argocd.argoproj.io/sync-options: Delete=false,Prune=false
      template:
        ttl: "240h"
        includedNamespaces:
        - "*"
        excludedNamespaceScopedResources:
        - persistentVolumeClaims
        excludedClusterScopedResources:
        - persistentVolumes