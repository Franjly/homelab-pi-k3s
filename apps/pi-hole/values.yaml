pihole:
  # Default values for pihole.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.

  # -- The number of replicas
  replicaCount: 1

  # -- The `spec.strategyTpye` for updates
  strategyType: RollingUpdate

  # -- The maximum number of Pods that can be created over the desired number of `ReplicaSet` during updating.
  maxSurge: 1

  # -- The maximum number of Pods that can be unavailable during updating
  maxUnavailable: 1

  image:
    # -- the repostory to pull the image from
    repository: "pihole/pihole"
    # -- the docker tag, if left empty it will get it from the chart's appVersion
    tag: "2022.09.4"
    # -- the pull policy
    pullPolicy: IfNotPresent

  dualStack:
    # -- set this to true to enable creation of DualStack services or creation of separate IPv6 services if `serviceDns.type` is set to `"LoadBalancer"`
    enabled: false

  dnsHostPort:
    # -- set this to true to enable dnsHostPort
    enabled: false
    # -- default port for this pod
    port: 53

  # -- Configuration for the DNS service on port 53
  serviceDns:

    # -- deploys a mixed (TCP + UDP) Service instead of separate ones
    mixedService: false

    # -- `spec.type` for the DNS Service
    type: LoadBalancer

    # -- The port of the DNS service
    port: 53

    # -- Optional node port for the DNS service
    nodePort: ""

    # -- `spec.externalTrafficPolicy` for the DHCP Service
    externalTrafficPolicy: Local

    # -- A fixed `spec.loadBalancerIP` for the DNS Service
    loadBalancerIP: "192.168.40.254"
    # -- A fixed `spec.loadBalancerIP` for the IPv6 DNS Service
    loadBalancerIPv6: ""

    # -- Annotations for the DNS service
    annotations:
      metallb.universe.tf/address-pool: network
      metallb.universe.tf/allow-shared-ip: pihole-svc

  # -- Configuration for the DHCP service on port 67
  serviceDhcp:
    enabled: false

  # -- Configuration for the web interface service
  serviceWeb:
    # -- Configuration for the HTTP web interface listener
    http:

      # -- Generate a service for HTTP traffic
      enabled: true

      # -- The port of the web HTTP service
      port: 80

      # -- Optional node port for the web HTTP service
      nodePort: ""

    # -- Configuration for the HTTPS web interface listener
    https:
      # -- Generate a service for HTTPS traffic
      enabled: true

      # -- The port of the web HTTPS service
      port: 443

      # -- Optional node port for the web HTTPS service
      nodePort: ""

    # -- `spec.type` for the web interface Service
    type: LoadBalancer

    # -- `spec.externalTrafficPolicy` for the web interface Service
    externalTrafficPolicy: Local

    # -- A fixed `spec.loadBalancerIP` for the web interface Service
    loadBalancerIP: "192.168.40.254"
    # -- A fixed `spec.loadBalancerIP` for the IPv6 web interface Service
    loadBalancerIPv6: ""

    # -- Annotations for the DHCP service
    annotations:
      metallb.universe.tf/address-pool: network
      metallb.universe.tf/allow-shared-ip: pihole-svc

  virtualHost: pi.hole

  # -- Configuration for the Ingress
  ingress:
    enabled: true

    ingressClassName: nginx

    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-staging
      # kubernetes.io/tls-acme: "true"

    path: /
    hosts:
      - pi-hole.local.tecno-fly.com
    tls:
     - secretName: pi-hole-tls
       hosts:
         - pi-hole.local.tecno-fly.com

  # -- `spec.PersitentVolumeClaim` configuration
  persistentVolumeClaim:
    enabled: true
    storageClass: "longhorn"
    size: "1Gi"

  nodeSelector:
    node.kubernetes.io/role: master

  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Equal
      value: "true"
      effect: NoSchedule 

  # -- Administrator password when not using an existing secret (see below)
  adminPassword: <path:pi-k3s/data/apps/pi-hole#adminPassword>

  # -- Use an existing secret for the admin password.
  admin:
    # -- Specify an existing secret to use as admin password
    existingSecret: ""
    # -- Specify the key inside the secret to use
    passwordKey: "password"

  # -- extraEnvironmentVars is a list of extra enviroment variables to set for pihole to use
  extraEnvVars: {}
    # TZ: UTC

  # -- extraEnvVarsSecret is a list of secrets to load in as environment variables.
  extraEnvVarsSecret: {}
    # env_var:
    #   name: secret-name
    #   key: secret-key

  # -- default upstream DNS 1 server to use
  DNS1: "1.1.1.1"
  # -- default upstream DNS 2 server to use
  DNS2: "8.8.8.8"

  doh:
    # -- set to true to enabled DNS over HTTPs via cloudflared
    enabled: false
    name: "cloudflared"
    repository: "crazymax/cloudflared"
    tag: latest
    pullPolicy: IfNotPresent
    # -- Here you can pass environment variables to the DoH container, for example:
    envVars: {}
      # TUNNEL_DNS_UPSTREAM: "https://1.1.1.2/dns-query,https://1.0.0.2/dns-query"

    # -- Probes configuration
    probes:
      # -- Configure the healthcheck for the doh container
      liveness:
        # -- set to true to enable liveness probe
        enabled: true
        # -- customize the liveness probe
        probe:
          exec:
            command:
              - nslookup
              - -po=5053
              - cloudflare.com
              - '127.0.0.1'
        # -- defines the initial delay for the liveness probe
        initialDelaySeconds: 60
        # -- defines the failure threshold for the liveness probe
        failureThreshold: 10
        # -- defines the timeout in secondes for the liveness probe
        timeoutSeconds: 5

  dnsmasq:
    # -- Add upstream dns servers. All lines will be added to the pihole dnsmasq configuration
    upstreamServers: []
    # - server=/foo.bar/192.168.178.10
    # - server=/bar.foo/192.168.178.11

    # -- Add custom dns entries to override the dns resolution. All lines will be added to the pihole dnsmasq configuration.
    customDnsEntries:
      - address=/local.tecno-fly.com/192.168.40.200
    # - address=/bar.foo/192.168.178.11

    # -- Dnsmasq reads the /etc/hosts file to resolve ips. You can add additional entries if you like
    additionalHostsEntries:
    # - 192.168.0.4     host5

    # -- Static DHCP config
    staticDhcpEntries: []
    # staticDhcpEntries:
    # - dhcp-host=MAC_ADDRESS,IP_ADDRESS,HOSTNAME

    # -- Other options
    customSettings:
    # otherSettings:
    # - rebind-domain-ok=/plex.direct/

    # -- Here we specify custom cname entries that should point to `A` records or
    # elements in customDnsEntries array.
    # The format should be:
    #  - cname=cname.foo.bar,foo.bar
    #  - cname=cname.bar.foo,bar.foo
    #  - cname=cname record,dns record
    customCnameEntries: []
    # Here we specify custom cname entries that should point to `A` records or
    # elements in customDnsEntries array.
    # The format should be:
    #   - cname=cname.foo.bar,foo.bar
    #   - cname=cname.bar.foo,bar.foo
    #   - cname=cname record,dns record

  # -- list of adlists to import during initial start of the container
  adlists:
    # - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
    - https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt
    - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts
    - https://v.firebog.net/hosts/static/w3kbl.txt
    - https://adaway.org/hosts.txt
    - https://v.firebog.net/hosts/AdguardDNS.txt
    - https://v.firebog.net/hosts/Admiral.txt
    - https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt
    - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
    - https://v.firebog.net/hosts/Easylist.txt
    - https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext
    - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts
    - https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts
    - https://v.firebog.net/hosts/Easyprivacy.txt
    - https://v.firebog.net/hosts/Prigent-Ads.txt
    - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts
    - https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt
    - https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt
    - https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt
    - https://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt
    - https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt
    - https://v.firebog.net/hosts/Prigent-Crypto.txt
    - https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts
    - https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt
    - https://phishing.army/download/phishing_army_blocklist_extended.txt
    - https://malware-filter.gitlab.io/malware-filter/phishing-filter-hosts.txt
    - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt
    - https://v.firebog.net/hosts/RPiList-Malware.txt
    - https://v.firebog.net/hosts/RPiList-Phishing.txt
    - https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt
    - https://raw.githubusercontent.com/AssoEchap/stalkerware-indicators/master/generated/hosts
    - https://urlhaus.abuse.ch/downloads/hostfile/
    - https://zerodot1.gitlab.io/CoinBlockerLists/hosts_browser
    # # Extra Links
    # - https://raw.githubusercontent.com/matomo-org/referrer-spam-blacklist/master/spammers.txt
    # - https://someonewhocares.org/hosts/zero/hosts
    # - https://raw.githubusercontent.com/VeleSila/yhosts/master/hosts
    # - https://winhelp2002.mvps.org/hosts.txt
    # - https://v.firebog.net/hosts/neohostsbasic.txt
    # - https://raw.githubusercontent.com/RooneyMcNibNug/pihole-stuff/master/SNAFU.txt
    # - https://paulgb.github.io/BarbBlock/blacklists/hosts-file.txt
    # - https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts
    # - https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt
    # - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/android-tracking.txt
    # - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt
    # - https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/AmazonFireTV.txt
    # - https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt
    # - https://v.firebog.net/hosts/Prigent-Malware.txt
    # - https://raw.githubusercontent.com/chadmayfield/my-pihole-blocklists/master/lists/pi_blocklist_porn_top1m.list
    # - https://v.firebog.net/hosts/Prigent-Adult.txt
    # - https://raw.githubusercontent.com/anudeepND/blacklist/master/facebook.txt

  # -- list of whitelisted domains to import during initial start of the container
  whitelist: {}
    # If you want to provide whitelisted domains, add them here.
    # - clients4.google.com

  # -- list of blacklisted domains to import during initial start of the container
  blacklist: {}
    # If you want to have special domains blacklisted, add them here
    # - *.blackist.com

  # -- list of blacklisted regex expressions to import during initial start of the container
  regex: {}
    # Add regular expression blacklist items
    # - (^|\.)facebook\.com$

  # -- values that should be added to pihole-FTL.conf
  ftl: {}
    # Add values for pihole-FTL.conf
    # MAXDBDAYS: 14

  # -- port the container should use to expose HTTP traffic
  webHttp: "80"

  # -- port the container should use to expose HTTPS traffic
  webHttps: "443"

  # -- hostname of pod
  hostname: ""

  # -- should the container use host network
  hostNetwork: "false"

  # -- should container run in privileged mode
  privileged: "false"

  customVolumes:
    # -- set this to true to enable custom volumes
    enabled: false
    # -- any volume type can be used here
    config: {}
      # hostPath:
      #   path: "/mnt/data"

  # -- any extra volumes you might want
  extraVolumes: {}
    # external-conf:
    #   configMap:
    #     name: pi-hole-lighttpd-external-conf

  # -- any extra volume mounts you might want
  extraVolumeMounts: {}
    # external-conf:
    #   mountPath: /etc/lighttpd/external.conf
    #   subPath: external.conf

  # -- Additional annotations for pods
  podAnnotations: {}
    # Example below allows Prometheus to scape on metric port (requires pihole-exporter sidecar enabled)
    # prometheus.io/port: '9617'
    # prometheus.io/scrape: 'true'

  monitoring:
    # -- Preferably adding prometheus scrape annotations rather than enabling podMonitor.
    podMonitor:
      # -- set this to true to enable podMonitor
      enabled: false
    # -- Sidecar configuration
    sidecar:
      # -- set this to true to enable podMonitor as sidecar
      enabled: false
      port: 9617
      image:
        repository: ekofr/pihole-exporter
        tag: v0.3.0
        pullPolicy: IfNotPresent
      resources:
        limits:
          memory: 128Mi
        # requests:
        #  cpu: 100m
        #  memory: 128Mi

  podDnsConfig:
    enabled: true
    policy: "None"
    nameservers:
    - 127.0.0.1
    - 1.1.1.1
    - 8.8.8.8