octoprint:
  image:
    repository: octoprint/octoprint
    tag: 1.8.7

  env:
    TZ: Europe/Madrid
    OCTOPRINT_PORT: 5000
    # -- Enable MJPG Streamer
    # Enable this to ensure camera streaming is enabled you add a video device.
    ENABLE_MJPG_STREAMER: "false"
    # -- MJPG Streamer input parameters
    MJPG_STREAMER_INPUT:  # "-y -n -r 640x480"
    # -- MJPG Streamer camera device
    CAMERA_DEV:  # /dev/video0

  nodeSelector:
    kubernetes.io/hostname: pi-kube-worker-0

  # -- Configures service settings for the chart.
  # @default -- See values.yaml
  service:
    main:
      ports:
        http:
          port: 80

  ingress:
    main:
      enabled: true

      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: 50m
        cert-manager.io/cluster-issuer: letsencrypt-prod
        # kubernetes.io/tls-acme: "true"
        hajimari.io/appName: Octoprint
        hajimari.io/icon: printer
        hajimari.io/group: Home Automation
        hajimari.io/targetBlank: 'false'

      ingressClassName: "nginx"

      hosts:
        - host: octoprint.local.tecno-fly.com
          paths:
            - path: /
              pathType: Prefix
              service:
                name: octoprint
                port: 80
      tls:
       - secretName: octoprint-tls
         hosts:
           - octoprint.local.tecno-fly.com

  securityContext:
    # -- (bool) Privileged securityContext may be required if USB devics are accessed directly through the host machine
    privileged: true

  # -- Configure persistence settings for the chart under this key.
  # @default -- See values.yaml
  persistence:
    data:
      enabled: true
      mountPath: /octoprint
      storageClass: longhorn
      accessMode: ReadWriteOnce
      size: 5Gi
    # -- Configure a hostPathMount to mount a USB device in the container.
    # @default -- See values.yaml
    printer:
      enabled: true
      type: hostPath
      hostPath: /dev/ttyUSB0